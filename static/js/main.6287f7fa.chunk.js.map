{"version":3,"sources":["assets/noPosterSmall.png","Components/Header.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Link.js","Components/MinPoster.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","Container","div","Title","span","Grid","Section","title","children","role","aria-label","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","require","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","Loader","map","movie","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","Icon","url","icon","href","rel","MinPoster","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DataName","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","imdb_id","faImdb","videos","video","faYoutube","key","production_companies","compnay","production_countries","country","seasons","season","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6287f7fa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏰\n    </span>\n  </Container>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${(props) => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/noPosterSmall.png\")\n          }\n        />\n        {rating && (\n          <Rating>\n            <span role=\"img\" aria-label=\"rating\">\n              ⭐️\n            </span>{\" \"}\n            {rating}/10\n          </Rating>\n        )}\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\n  <>\n    <Helmet>\n      <title>Movies | Getflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        <Helmet>\n          <title>Movies | Getflix</title>\n        </Helmet>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"47e168b881d7735bb28d26d67b4dedfe\",\n    language: \"en-US\",\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming },\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movie information.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n    <Helmet>\n      <title>TV Shows | Getflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    loading: true,\n    error: null,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n      this.setState({ topRated, popular, airingToday });\n    } catch {\n      this.setState({\n        error: \"Can't find TV information.\",\n      });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, loading, error } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        loading={loading}\n        error={error}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 90%;\n  background-color: white;\n  color: black;\n  padding: 10px;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  loading,\n  searchTerm,\n  handleSubmit,\n  error,\n  updateTerm,\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Getflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {tvResults &&\n          movieResults &&\n          tvResults.length === 0 &&\n          movieResults.length === 0 && (\n            <Message text=\"Nothing found\" color=\"#95a5a6\" />\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    loading: false,\n    error: null,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({\n      searchTerm: value,\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n      this.setState({\n        movieResults,\n        tvResults,\n      });\n    } catch {\n      this.setState({ error: \"Can't find results.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        loading={loading}\n        error={error}\n        searchTerm={searchTerm}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: inline-block;\n  opacity: 0.8;\n`;\n\nconst Icon = styled.span`\n  margin-left: 10px;\n  font-size: 30px;\n  display: flex;\n  align-items: center;\n`;\n\nconst Text = styled.span`\n  font-size: 16px;\n  font-weight: 600;\n  margin-left: 10px;\n`;\n\nconst Link = ({ url, text, icon }) => (\n  <a href={url} target=\"_blank\" rel=\"noreferrer\">\n    <Container>\n      <Icon>\n        <FontAwesomeIcon icon={icon} />\n        <Text>{text}</Text>\n      </Icon>\n    </Container>\n  </a>\n);\n\nexport default Link;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst MinPoster = ({ imageUrl, title }) => (\n  <Container>\n    <ImageContainer>\n      <Image\n        bgUrl={\n          imageUrl\n            ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n            : \"https://cdn.pixabay.com/photo/2015/12/09/17/12/popcorn-1085072_960_720.jpg\"\n        }\n      />\n    </ImageContainer>\n    <Title>{title.length > 18 ? `${title.substring(0, 18)}...` : title}</Title>\n  </Container>\n);\n\nMinPoster.propTypes = {\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\n\nexport default MinPoster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { faImdb, faYoutube } from \"@fortawesome/free-brands-svg-icons\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Link from \"Components/Link\";\nimport MinPoster from \"Components/MinPoster\";\nimport Section from \"Components/Section\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  padding-bottom: 50px;\n`;\n\nconst Cover = styled.div`\n  height: 85vh;\n  width: 30%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  padding: 20px;\n  width: 60%;\n  margin-left: 50px;\n  border-radius: 5px;\n  background-color: rgba(0, 0, 0, 0.4);\n`;\n\nconst Title = styled.h3`\n  font-size: 42px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span`\n  font-size: 18px;\n`;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 28px;\n  color: #d4d4d4;\n  width: 90%;\n  line-height: 1.5;\n`;\n\nconst DataName = styled.div`\n  margin-top: 30px;\n  margin-bottom: 10px;\n  color: white;\n  opacity: 0.8;\n  font-weight: 800;\n`;\n\nconst Seasons = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Getflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Getflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPosterSmall.png\")\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n          {result.imdb_id ? (\n            <>\n              <DataName>Links</DataName>\n              <Link\n                text={\"IMDB Page\"}\n                icon={faImdb}\n                url={`https://www.imdb.com/title/${result.imdb_id}`}\n              ></Link>\n            </>\n          ) : null}\n          {result.videos.results?.length > 0 ? (\n            <>\n              <DataName>Videos</DataName>\n              {result.videos.results.map((video) => (\n                <Link\n                  text={video.name}\n                  key={video.id}\n                  icon={faYoutube}\n                  url={`https://www.youtube.com/watch?v=${video.key}`}\n                />\n              ))}\n            </>\n          ) : null}\n          {result.production_companies?.length > 0 ? (\n            <>\n              <DataName>Production Companies</DataName>\n              {result.production_companies.map((compnay, index) =>\n                index === result.production_companies.length - 1 ? (\n                  <span>{compnay.name}</span>\n                ) : (\n                  <span>{compnay.name} / </span>\n                )\n              )}\n            </>\n          ) : null}\n          {result.production_countries?.length > 0 ? (\n            <>\n              <DataName>Production Countries</DataName>\n              {result.production_countries.map((country, index) =>\n                index === result.production_countries.length - 1 ? (\n                  <span>{country.name}</span>\n                ) : (\n                  <span>{country.name} / </span>\n                )\n              )}\n            </>\n          ) : null}\n          {result.seasons?.length > 0 ? (\n            <>\n              <DataName>Seasons</DataName>\n              <Section>\n                {result.seasons.map((season) => (\n                  <MinPoster\n                    imageUrl={season.poster_path}\n                    title={season.name}\n                  ></MinPoster>\n                ))}\n              </Section>\n            </>\n          ) : null}\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"api\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\"),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport Header from \"Components/Header\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n  <Router>\n    <Header />\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/tv\" component={TV} />\n      <Route path=\"/search\" component={Search} />\n      <Route path=\"/movie/:id\" component={Detail} />\n      <Route path=\"/show/:id\" component={Detail} />\n      <Redirect from=\"*\" to=\"/\" />\n    </Switch>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:12px;\n        background-color:rgba(20, 20, 20, 1);\n        color:white;\n        padding-top:50px;\n    }\n`;\n\nexport default globalStyles;\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}